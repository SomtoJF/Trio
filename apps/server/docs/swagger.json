{
    "schemes": [
        ""
    ],
    "swagger": "2.0",
    "info": {
        "description": "Trio API Server",
        "title": "Trio API",
        "contact": {
            "name": "Somtochukwu Francis",
            "email": "somtofrancis5@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:4000",
    "basePath": "/",
    "paths": {
        "/agents/{agentId}": {
            "get": {
                "description": "Retrieves an agent's details for the authenticated user",
                "tags": [
                    "agents"
                ],
                "summary": "Get agent details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "agentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agent details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an agent's details for the authenticated user",
                "tags": [
                    "agents"
                ],
                "summary": "Update an agent's details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "agentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent details",
                        "name": "agentInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.updateAgentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated agent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an agent for the authenticated user",
                "tags": [
                    "agents"
                ],
                "summary": "Delete an agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "agentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agent deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chats": {
            "delete": {
                "description": "Deletes all chats and associated data belonging to the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Delete all chats for the authenticated user",
                "responses": {
                    "200": {
                        "description": "All chats deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chats/create-with-agents": {
            "post": {
                "description": "Creates a new chat with agents for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Create a new chat with agents",
                "parameters": [
                    {
                        "description": "Chat and agents details",
                        "name": "chatInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.createChatWithAgentsInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created chat with agents",
                        "schema": {
                            "$ref": "#/definitions/models.Chat"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chats/{chatId}": {
            "get": {
                "description": "Retrieves chat information including its agents and messages with sender details",
                "tags": [
                    "chats"
                ],
                "summary": "Get chat information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chat information",
                        "schema": {
                            "$ref": "#/definitions/models.Chat"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a chat's name and replaces agents with new ones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Update a chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chat details",
                        "name": "chatInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.updateChatInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated chat",
                        "schema": {
                            "$ref": "#/definitions/models.Chat"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a chat for the authenticated user",
                "tags": [
                    "chats"
                ],
                "summary": "Delete a chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Chat deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chats/{chatId}/agents": {
            "post": {
                "description": "Adds an agent to a chat (max 2 agents per chat)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Add an agent to a chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent details",
                        "name": "agentInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.addAgentToChatInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created agent",
                        "schema": {
                            "$ref": "#/definitions/models.Agent"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chats/{chatId}/messages": {
            "post": {
                "description": "Adds a new message to a chat and generates responses from agents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Add a new message to a chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message content",
                        "name": "messageInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.addMessageToChatInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reflection response generated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "201": {
                        "description": "Message added successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "424": {
                        "description": "Chat must have at least one agent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logs in a user and returns an access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "loginInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.loginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Logs out the user by clearing the access token",
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "description": "Retrieves the current authenticated user's information",
                "tags": [
                    "users"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "Current user data",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/me/chats": {
            "get": {
                "description": "Retrieves all chats for the authenticated user",
                "tags": [
                    "users"
                ],
                "summary": "Get user chats",
                "responses": {
                    "200": {
                        "description": "User chats",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Chat"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "description": "Resets the password for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset user password",
                "parameters": [
                    {
                        "description": "Password reset details",
                        "name": "passwordResetRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.passwordResetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Creates a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Signup a new user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "userInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.signUpInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.addAgentToChatInput": {
            "type": "object",
            "required": [
                "lingo",
                "name",
                "traits"
            ],
            "properties": {
                "lingo": {
                    "type": "string",
                    "maxLength": 20
                },
                "name": {
                    "type": "string",
                    "maxLength": 20
                },
                "traits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controllers.addMessageToChatInput": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "controllers.createChatWithAgentsInput": {
            "type": "object",
            "required": [
                "agents",
                "chatName"
            ],
            "properties": {
                "agents": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "lingo",
                            "name",
                            "traits"
                        ],
                        "properties": {
                            "lingo": {
                                "type": "string",
                                "maxLength": 20
                            },
                            "name": {
                                "type": "string",
                                "maxLength": 20
                            },
                            "traits": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "chatName": {
                    "type": "string",
                    "maxLength": 20
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "DEFAULT",
                        "REFLECTION"
                    ]
                }
            }
        },
        "controllers.loginInput": {
            "type": "object",
            "required": [
                "password",
                "userName"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8
                },
                "userName": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "controllers.passwordResetRequest": {
            "type": "object",
            "required": [
                "newPassword",
                "password"
            ],
            "properties": {
                "newPassword": {
                    "type": "string",
                    "maxLength": 20
                },
                "password": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "controllers.signUpInput": {
            "type": "object",
            "required": [
                "fullName",
                "password",
                "userName"
            ],
            "properties": {
                "fullName": {
                    "type": "string",
                    "maxLength": 50
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8
                },
                "userName": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "controllers.updateAgentInput": {
            "type": "object",
            "required": [
                "lingo",
                "name",
                "traits"
            ],
            "properties": {
                "lingo": {
                    "type": "string",
                    "maxLength": 20
                },
                "name": {
                    "type": "string",
                    "maxLength": 20
                },
                "traits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controllers.updateChatInput": {
            "type": "object",
            "required": [
                "agents",
                "chatName"
            ],
            "properties": {
                "agents": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "id",
                            "name"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "metadata": {
                                "type": "object",
                                "required": [
                                    "lingo",
                                    "traits"
                                ],
                                "properties": {
                                    "lingo": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "traits": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "name": {
                                "type": "string",
                                "maxLength": 20
                            }
                        }
                    }
                },
                "chatName": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Agent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/models.AgentMetadata"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.AgentMetadata": {
            "type": "object",
            "properties": {
                "lingo": {
                    "type": "string"
                },
                "traits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Chat": {
            "type": "object",
            "properties": {
                "agents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Agent"
                    }
                },
                "chatName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Message"
                    }
                },
                "type": {
                    "$ref": "#/definitions/models.ChatType"
                }
            }
        },
        "models.ChatType": {
            "type": "string",
            "enum": [
                "DEFAULT",
                "REFLECTION"
            ],
            "x-enum-varnames": [
                "ChatTypeDefault",
                "ChatTypeReflection"
            ]
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "_": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "string"
                },
                "senderType": {
                    "description": "User or Agent",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "chats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Chat"
                    }
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        }
    }
}